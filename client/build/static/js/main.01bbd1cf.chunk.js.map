{"version":3,"sources":["providers/tweetContext.js","components/InputTweet.jsx","components/Tweet.jsx","components/Feed.jsx","components/Tweets.jsx","App.js","index.js"],"names":["tweetContext","createContext","tweets","addTweet","InputTweet","React","useState","input","setInput","useContext","className","type","onChange","e","target","value","onClick","Tweet","map","id","tweet","key","Feed","Tweets","setTweets","getTweets","a","fetch","json","response","method","headers","body","JSON","stringify","prevState","useEffect","Provider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAOeA,EALMC,wBAAc,CAClCC,OAAQ,GACRC,SAAU,eCkBIC,EApBI,WAAO,IAAD,EACEC,IAAMC,SAAS,IADjB,mBACjBC,EADiB,KACVC,EADU,KAEhBL,EAAaE,IAAMI,WAAWT,GAA9BG,SAER,OACC,oCACC,yBAAKO,UAAU,UACd,2BACCC,KAAK,OACLD,UAAU,eACVE,SAAU,SAAAC,GAAC,OAAIL,EAASK,EAAEC,OAAOC,UAElC,4BAAQL,UAAU,kBAAkBM,QAAS,kBAAMb,EAASI,KAA5D,aCOWU,EAnBD,WAAO,IACZf,EAAWG,IAAMI,WAAWT,GAA5BE,OACR,OACC,oCACEA,EAAOgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACX,wBAAIC,IAAKF,GACR,4BAAKC,GACL,4BACC,4BAAQV,UAAU,mBAAlB,SAED,4BACC,4BAAQA,UAAU,kBAAlB,iBCQSY,EAnBF,WACZ,OACC,oCACC,2BAAOZ,UAAU,qBAChB,+BACC,4BACC,qCACA,oCACA,wCAGF,+BACC,kBAAC,EAAD,UC6BUa,EAvCA,WAAO,IAAD,EACQlB,IAAMC,SAAS,IADvB,mBACbJ,EADa,KACLsB,EADK,KAGdC,EAAS,uCAAG,8BAAAC,EAAA,4DACL,UADK,SAEIC,MADT,WADK,cAEXzB,EAFW,gBAGMA,EAAO0B,OAHb,OAGXC,EAHW,OAIjBL,EAAUK,GAJO,2CAAH,qDAOT1B,EAAQ,uCAAG,WAAMI,GAAN,mBAAAmB,EAAA,4DACJ,SACNN,EAAQ,CAAEA,MAAOb,GAFP,SAGOoB,MAFX,SAEsB,CACjCG,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAUd,KARN,cAGVjB,EAHU,gBAUOA,EAASyB,OAVhB,OAUVC,EAVU,OAWhBL,GAAU,SAAAW,GAAS,4BAAQA,GAAR,CAAmBN,OAXtB,2CAAH,sDAkBd,OAJAxB,IAAM+B,WAAU,WACfX,MACE,IAGF,oCACC,sCACA,kBAAC,EAAaY,SAAd,CAAuBtB,MAAO,CAAEb,SAAQC,aACvC,kBAAC,EAAD,MACA,kBAAC,EAAD,SCxBWmC,MAVf,WACC,OACC,oCACC,yBAAK5B,UAAU,8BACd,kBAAC,EAAD,SCFJ6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.01bbd1cf.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst tweetContext = createContext({\r\n\ttweets: [],\r\n\taddTweet: () => {}\r\n});\r\n\r\nexport default tweetContext;\r\n","import React from 'react';\r\nimport tweetContext from '../providers/tweetContext.js';\r\nconst InputTweet = () => {\r\n\tconst [input, setInput] = React.useState('');\r\n\tconst { addTweet } = React.useContext(tweetContext);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='d-flex'>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\tonChange={e => setInput(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<button className='btn btn-primary' onClick={() => addTweet(input)}>\r\n\t\t\t\t\tTweet!\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default InputTweet;\r\n","import React from 'react';\r\nimport tweetContext from '../providers/tweetContext.js';\r\nconst Tweet = () => {\r\n\tconst { tweets } = React.useContext(tweetContext);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{tweets.map(({ id, tweet }) => (\r\n\t\t\t\t<tr key={id}>\r\n\t\t\t\t\t<td>{tweet}</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button className='btn btn-warning'>Edit</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<button className='btn btn-danger'>Delete</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Tweet;\r\n","import React from 'react';\r\nimport Tweet from './Tweet';\r\nconst Feed = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<table className='table text-center'>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Tweet</td>\r\n\t\t\t\t\t\t<td>Edit</td>\r\n\t\t\t\t\t\t<td>Delete</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<Tweet />\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Feed;\r\n","import React from 'react';\r\nimport InputTweet from './InputTweet';\r\nimport Feed from './Feed';\r\nimport tweetContext from '../providers/tweetContext.js';\r\nconst Tweets = () => {\r\n\tconst [tweets, setTweets] = React.useState([]);\r\n\r\n\tconst getTweets = async () => {\r\n\t\tconst url = '/tweets';\r\n\t\tconst tweets = await fetch(url);\r\n\t\tconst response = await tweets.json();\r\n\t\tsetTweets(response);\r\n\t};\r\n\r\n\tconst addTweet = async input => {\r\n\t\tconst url = '/tweet';\r\n\t\tconst tweet = { tweet: input };\r\n\t\tconst addTweet = await fetch(url, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(tweet),\r\n\t\t});\r\n\t\tconst response = await addTweet.json();\r\n\t\tsetTweets(prevState => [...prevState, response]);\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tgetTweets();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Tweets</h1>\r\n\t\t\t<tweetContext.Provider value={{ tweets, addTweet }}>\r\n\t\t\t\t<InputTweet />\r\n\t\t\t\t<Feed />\r\n\t\t\t</tweetContext.Provider>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Tweets;\r\n","import React from 'react';\nimport './App.css';\nimport Tweets from './components/Tweets.jsx';\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<div className='container text-center mt-5'>\n\t\t\t\t<Tweets />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}